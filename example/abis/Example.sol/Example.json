{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "flipFlop",
      "inputs": [
        {
          "name": "flip",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "flop",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "_flop",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_flip",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "guessALetter",
      "inputs": [
        {
          "name": "guess",
          "type": "uint8",
          "internalType": "enum Example.Letters"
        }
      ],
      "outputs": [],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "mixStructsAndPrimitives",
      "inputs": [],
      "outputs": [
        {
          "name": "simpleStruct",
          "type": "tuple",
          "internalType": "struct Example.SimpleStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Example.NestedStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "innerStruct",
              "type": "tuple",
              "internalType": "struct Example.InnerStruct",
              "components": [
                {
                  "name": "boolVal",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            }
          ]
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "YesOrNo",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "namedSingleStruct",
      "inputs": [],
      "outputs": [
        {
          "name": "struct1",
          "type": "tuple",
          "internalType": "struct Example.SimpleStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "namedTwoMixedStructs",
      "inputs": [],
      "outputs": [
        {
          "name": "simpleStruct",
          "type": "tuple",
          "internalType": "struct Example.SimpleStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        },
        {
          "name": "nestedStruct",
          "type": "tuple",
          "internalType": "struct Example.NestedStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "innerStruct",
              "type": "tuple",
              "internalType": "struct Example.InnerStruct",
              "components": [
                {
                  "name": "boolVal",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "singleNestedStruct",
      "inputs": [
        {
          "name": "nestedStruct",
          "type": "tuple",
          "internalType": "struct Example.NestedStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "innerStruct",
              "type": "tuple",
              "internalType": "struct Example.InnerStruct",
              "components": [
                {
                  "name": "boolVal",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Example.NestedStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "innerStruct",
              "type": "tuple",
              "internalType": "struct Example.InnerStruct",
              "components": [
                {
                  "name": "boolVal",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "singleSimpleStruct",
      "inputs": [
        {
          "name": "simpleStruct",
          "type": "tuple",
          "internalType": "struct Example.SimpleStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Example.SimpleStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "twoMixedStructs",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Example.SimpleStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Example.NestedStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "innerStruct",
              "type": "tuple",
              "internalType": "struct Example.InnerStruct",
              "components": [
                {
                  "name": "boolVal",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "twoSimpleStructs",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Example.SimpleStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Example.SimpleStruct",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "vecOfStruct",
      "inputs": [
        {
          "name": "inVecSimpleStruct",
          "type": "tuple[]",
          "internalType": "struct Example.SimpleStruct[]",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "vecSimpleStruct",
          "type": "tuple[]",
          "internalType": "struct Example.SimpleStruct[]",
          "components": [
            {
              "name": "intVal",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "strVal",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "event",
      "name": "Flip",
      "inputs": [
        {
          "name": "flip",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Flop",
      "inputs": [
        {
          "name": "flop",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "WrongChoice",
      "inputs": [
        {
          "name": "answer",
          "type": "uint8",
          "internalType": "enum Example.Letters"
        },
        {
          "name": "errorMessage",
          "type": "string",
          "internalType": "string"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000ef738038062000ef7833981016040819052620000349162000060565b6000620000428282620001c6565b505062000292565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200007457600080fd5b82516001600160401b03808211156200008c57600080fd5b818501915085601f830112620000a157600080fd5b815181811115620000b657620000b66200004a565b604051601f8201601f19908116603f01168101908382118183101715620000e157620000e16200004a565b816040528281528886848701011115620000fa57600080fd5b600093505b828410156200011e5784840186015181850187015292850192620000ff565b600086848301015280965050505050505092915050565b600181811c908216806200014a57607f821691505b6020821081036200016b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001c1576000816000526020600020601f850160051c810160208610156200019c5750805b601f850160051c820191505b81811015620001bd57828155600101620001a8565b5050505b505050565b81516001600160401b03811115620001e257620001e26200004a565b620001fa81620001f3845462000135565b8462000171565b602080601f831160018114620002325760008415620002195750858301515b600019600386901b1c1916600185901b178555620001bd565b600085815260208120601f198616915b82811015620002635788860151825594840194600190910190840162000242565b5085821015620002825787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c5580620002a26000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806386a5a4c31161006657806386a5a4c3146101e3578063c8e3a3df146101f6578063cf71512c14610214578063d33264461461023c578063e0f7c6041461025c57600080fd5b806326da1c9e146100a357806340e27b10146100b857806353fd10431461015b57806373b10c0f14610171578063811d9aa31461018a575b600080fd5b6100b66100b13660046105de565b610264565b005b604080518082018252600080825260606020928301819052835180850185529182529082015281518083018352600181528251808401845260108082526f596f7520617265206e756d626572203160801b82850152828401919091528351808501855260028152845180860186529182526f2cb7ba9030b93290373ab6b132b9101960811b82850152928301529151610152929190610673565b60405180910390f35b6101636102ca565b6040516101529291906106d7565b610179610370565b6040516101529594939291906106fc565b60408051808201825260008152606060209182015281518083018352600181528251808401909352601083526f596f7520617265206e756d626572203160801b83830152908101919091525b6040516101529190610750565b6101d66101f1366004610763565b610445565b6102076102043660046108ed565b90565b60405161015291906109b0565b610227610222366004610a14565b610469565b60408051928352602083019190915201610152565b61024f61024a366004610a36565b6104df565b6040516101529190610a71565b6101636104f0565b60006003600183600281111561027c5761027c610a84565b6102869190610a9a565b6102909190610ac1565b60ff1660028111156102a4576102a4610a84565b90508060405163304ecc3560e21b81526004016102c19190610af1565b60405180910390fd5b6040805180820190915260008152606060208201526102e76105a8565b505060408051808201825260018082528251808401845260108082526f596f7520617265206e756d626572203160801b60208381019190915280850192909252845160608101865260028152855180870187529182526f2cb7ba9030b93290373ab6b132b9101960811b8284015280830191909152845191820185529181529281019290925291565b60408051808201909152600081526060602082015261038d6105a8565b505060408051808201825260018082528251808401845260108082526f596f7520617265206e756d626572203160801b60208381019190915280850192909252845160608101865260028152855180870187529182526f2cb7ba9030b93290373ab6b132b9101960811b828401528083019190915284518083018652838152818601528451808601909552601385527214995d1d5c9b951e5c195cd0dbdb9d1c9858dd606a1b91850191909152919260009091929394565b60408051808201909152600081526060602082015261046382610b6e565b92915050565b6000807ffc25ee6cef1e5b8c4e7a2f8d3bbb15ca76bb693b8b5644b3b481e1831c09530b8460405161049d91815260200190565b60405180910390a16040518381527ffa3d951cbf852d2a9cc2dfc9fc6b57914afbf57597ecf432c403ed2d74124b2c9060200160405180910390a15090929050565b6104e76105a8565b61046382610b7a565b60408051808201909152600081526060602082015261050d6105a8565b6040518060400160405280600181526020016040518060400160405280601081526020016f596f7520617265206e756d626572203160801b81525081525091506040518060600160405280600281526020016040518060400160405280601081526020016f2cb7ba9030b93290373ab6b132b9101960811b815250815260200160405180602001604052806001151581525081525090509091565b604051806060016040528060008152602001606081526020016105d960405180602001604052806000151581525090565b905290565b6000602082840312156105f057600080fd5b8135600381106105ff57600080fd5b9392505050565b6000815180845260005b8181101561062c57602081850181015186830182015201610610565b506000602082860101526020601f19601f83011685010191505092915050565b80518252600060208201516040602085015261066b6040850182610606565b949350505050565b604081526000610686604083018561064c565b8281036020840152610698818561064c565b95945050505050565b8051825260006020820151606060208501526106c06060850182610606565b604093840151511515949093019390935250919050565b6040815260006106ea604083018561064c565b828103602084015261069881856106a1565b60a08152600061070f60a083018861064c565b828103602084015261072181886106a1565b9050856040840152828103606084015261073b8186610606565b91505082151560808301529695505050505050565b6020815260006105ff602083018461064c565b60006020828403121561077557600080fd5b813567ffffffffffffffff81111561078c57600080fd5b8201604081850312156105ff57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516020810167ffffffffffffffff811182821017156107d7576107d761079e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108065761080661079e565b604052919050565b600082601f83011261081f57600080fd5b813567ffffffffffffffff8111156108395761083961079e565b61084c601f8201601f19166020016107dd565b81815284602083860101111561086157600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561089057600080fd5b6040516040810167ffffffffffffffff82821081831117156108b4576108b461079e565b816040528293508435835260208501359150808211156108d357600080fd5b506108e08582860161080e565b6020830152505092915050565b6000602080838503121561090057600080fd5b823567ffffffffffffffff8082111561091857600080fd5b818501915085601f83011261092c57600080fd5b81358181111561093e5761093e61079e565b8060051b61094d8582016107dd565b918252838101850191858101908984111561096757600080fd5b86860192505b838310156109a3578235858111156109855760008081fd5b6109938b89838a010161087e565b835250918601919086019061096d565b9998505050505050505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015610a0757603f198886030184526109f585835161064c565b945092850192908501906001016109d9565b5092979650505050505050565b60008060408385031215610a2757600080fd5b50508035926020909101359150565b600060208284031215610a4857600080fd5b813567ffffffffffffffff811115610a5f57600080fd5b8201606081850312156105ff57600080fd5b6020815260006105ff60208301846106a1565b634e487b7160e01b600052602160045260246000fd5b60ff818116838216019081111561046357634e487b7160e01b600052601160045260246000fd5b600060ff831680610ae257634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b600060038310610b1157634e487b7160e01b600052602160045260246000fd5b509081526040602082018190526035908201527f5468616e6b20796f7520666f7220706c6179696e672c2062757420796f7520636060820152743437b9b2903a3432903bb937b733903632ba3a32b960591b608082015260a00190565b6000610463368361087e565b60008136036060811215610b8d57600080fd5b6040516060810167ffffffffffffffff8282108183111715610bb157610bb161079e565b81604052853583526020860135915080821115610bcd57600080fd5b50610bda3682870161080e565b6020830152506020603f1983011215610bf257600080fd5b610bfa6107b4565b915060408401358015158114610c0f57600080fd5b825260408101919091529291505056fea2646970667358221220767e859c4c8487e919dc0cb55cf30b96c667b5f24c22513015d4c89b9af85f6c64736f6c63430008160033",
    "sourceMap": "57:3684:0:-:0;;;520:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;562:12;:19;577:4;562:12;:19;:::i;:::-;;520:68;57:3684;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:1;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:1;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:543::-;1806:2;1801:3;1798:11;1795:446;;;1842:1;1866:5;1863:1;1856:16;1910:4;1907:1;1897:18;1980:2;1968:10;1964:19;1961:1;1957:27;1951:4;1947:38;2016:4;2004:10;2001:20;1998:47;;;-1:-1:-1;2039:4:1;1998:47;2094:2;2089:3;2085:12;2082:1;2078:20;2072:4;2068:31;2058:41;;2149:82;2167:2;2160:5;2157:13;2149:82;;;2212:17;;;2193:1;2182:13;2149:82;;;2153:3;;;1795:446;1704:543;;;:::o;2423:1345::-;2543:10;;-1:-1:-1;;;;;2565:30:1;;2562:56;;;2598:18;;:::i;:::-;2627:97;2717:6;2677:38;2709:4;2703:11;2677:38;:::i;:::-;2671:4;2627:97;:::i;:::-;2779:4;;2836:2;2825:14;;2853:1;2848:663;;;;3555:1;3572:6;3569:89;;;-1:-1:-1;3624:19:1;;;3618:26;3569:89;-1:-1:-1;;2380:1:1;2376:11;;;2372:24;2368:29;2358:40;2404:1;2400:11;;;2355:57;3671:81;;2818:944;;2848:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2884:20:1;;;3002:236;3016:7;3013:1;3010:14;3002:236;;;3105:19;;;3099:26;3084:42;;3197:27;;;;3165:1;3153:14;;;;3032:19;;3002:236;;;3006:3;3266:6;3257:7;3254:19;3251:201;;;3327:19;;;3321:26;-1:-1:-1;;3410:1:1;3406:14;;;3422:3;3402:24;3398:37;3394:42;3379:58;3364:74;;3251:201;-1:-1:-1;;;;;3498:1:1;3482:14;;;3478:22;3465:36;;-1:-1:-1;2423:1345:1:o;:::-;57:3684:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806386a5a4c31161006657806386a5a4c3146101e3578063c8e3a3df146101f6578063cf71512c14610214578063d33264461461023c578063e0f7c6041461025c57600080fd5b806326da1c9e146100a357806340e27b10146100b857806353fd10431461015b57806373b10c0f14610171578063811d9aa31461018a575b600080fd5b6100b66100b13660046105de565b610264565b005b604080518082018252600080825260606020928301819052835180850185529182529082015281518083018352600181528251808401845260108082526f596f7520617265206e756d626572203160801b82850152828401919091528351808501855260028152845180860186529182526f2cb7ba9030b93290373ab6b132b9101960811b82850152928301529151610152929190610673565b60405180910390f35b6101636102ca565b6040516101529291906106d7565b610179610370565b6040516101529594939291906106fc565b60408051808201825260008152606060209182015281518083018352600181528251808401909352601083526f596f7520617265206e756d626572203160801b83830152908101919091525b6040516101529190610750565b6101d66101f1366004610763565b610445565b6102076102043660046108ed565b90565b60405161015291906109b0565b610227610222366004610a14565b610469565b60408051928352602083019190915201610152565b61024f61024a366004610a36565b6104df565b6040516101529190610a71565b6101636104f0565b60006003600183600281111561027c5761027c610a84565b6102869190610a9a565b6102909190610ac1565b60ff1660028111156102a4576102a4610a84565b90508060405163304ecc3560e21b81526004016102c19190610af1565b60405180910390fd5b6040805180820190915260008152606060208201526102e76105a8565b505060408051808201825260018082528251808401845260108082526f596f7520617265206e756d626572203160801b60208381019190915280850192909252845160608101865260028152855180870187529182526f2cb7ba9030b93290373ab6b132b9101960811b8284015280830191909152845191820185529181529281019290925291565b60408051808201909152600081526060602082015261038d6105a8565b505060408051808201825260018082528251808401845260108082526f596f7520617265206e756d626572203160801b60208381019190915280850192909252845160608101865260028152855180870187529182526f2cb7ba9030b93290373ab6b132b9101960811b828401528083019190915284518083018652838152818601528451808601909552601385527214995d1d5c9b951e5c195cd0dbdb9d1c9858dd606a1b91850191909152919260009091929394565b60408051808201909152600081526060602082015261046382610b6e565b92915050565b6000807ffc25ee6cef1e5b8c4e7a2f8d3bbb15ca76bb693b8b5644b3b481e1831c09530b8460405161049d91815260200190565b60405180910390a16040518381527ffa3d951cbf852d2a9cc2dfc9fc6b57914afbf57597ecf432c403ed2d74124b2c9060200160405180910390a15090929050565b6104e76105a8565b61046382610b7a565b60408051808201909152600081526060602082015261050d6105a8565b6040518060400160405280600181526020016040518060400160405280601081526020016f596f7520617265206e756d626572203160801b81525081525091506040518060600160405280600281526020016040518060400160405280601081526020016f2cb7ba9030b93290373ab6b132b9101960811b815250815260200160405180602001604052806001151581525081525090509091565b604051806060016040528060008152602001606081526020016105d960405180602001604052806000151581525090565b905290565b6000602082840312156105f057600080fd5b8135600381106105ff57600080fd5b9392505050565b6000815180845260005b8181101561062c57602081850181015186830182015201610610565b506000602082860101526020601f19601f83011685010191505092915050565b80518252600060208201516040602085015261066b6040850182610606565b949350505050565b604081526000610686604083018561064c565b8281036020840152610698818561064c565b95945050505050565b8051825260006020820151606060208501526106c06060850182610606565b604093840151511515949093019390935250919050565b6040815260006106ea604083018561064c565b828103602084015261069881856106a1565b60a08152600061070f60a083018861064c565b828103602084015261072181886106a1565b9050856040840152828103606084015261073b8186610606565b91505082151560808301529695505050505050565b6020815260006105ff602083018461064c565b60006020828403121561077557600080fd5b813567ffffffffffffffff81111561078c57600080fd5b8201604081850312156105ff57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516020810167ffffffffffffffff811182821017156107d7576107d761079e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108065761080661079e565b604052919050565b600082601f83011261081f57600080fd5b813567ffffffffffffffff8111156108395761083961079e565b61084c601f8201601f19166020016107dd565b81815284602083860101111561086157600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561089057600080fd5b6040516040810167ffffffffffffffff82821081831117156108b4576108b461079e565b816040528293508435835260208501359150808211156108d357600080fd5b506108e08582860161080e565b6020830152505092915050565b6000602080838503121561090057600080fd5b823567ffffffffffffffff8082111561091857600080fd5b818501915085601f83011261092c57600080fd5b81358181111561093e5761093e61079e565b8060051b61094d8582016107dd565b918252838101850191858101908984111561096757600080fd5b86860192505b838310156109a3578235858111156109855760008081fd5b6109938b89838a010161087e565b835250918601919086019061096d565b9998505050505050505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015610a0757603f198886030184526109f585835161064c565b945092850192908501906001016109d9565b5092979650505050505050565b60008060408385031215610a2757600080fd5b50508035926020909101359150565b600060208284031215610a4857600080fd5b813567ffffffffffffffff811115610a5f57600080fd5b8201606081850312156105ff57600080fd5b6020815260006105ff60208301846106a1565b634e487b7160e01b600052602160045260246000fd5b60ff818116838216019081111561046357634e487b7160e01b600052601160045260246000fd5b600060ff831680610ae257634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b600060038310610b1157634e487b7160e01b600052602160045260246000fd5b509081526040602082018190526035908201527f5468616e6b20796f7520666f7220706c6179696e672c2062757420796f7520636060820152743437b9b2903a3432903bb937b733903632ba3a32b960591b608082015260a00190565b6000610463368361087e565b60008136036060811215610b8d57600080fd5b6040516060810167ffffffffffffffff8282108183111715610bb157610bb161079e565b81604052853583526020860135915080821115610bcd57600080fd5b50610bda3682870161080e565b6020830152506020603f1983011215610bf257600080fd5b610bfa6107b4565b915060408401358015158114610c0f57600080fd5b825260408101919091529291505056fea2646970667358221220767e859c4c8487e919dc0cb55cf30b96c667b5f24c22513015d4c89b9af85f6c64736f6c63430008160033",
    "sourceMap": "57:3684:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;594:249;;;;;;:::i;:::-;;:::i;:::-;;1367:441;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1532:87:0;;;;;;;1567:1;1532:87;;;;;;;;;;;;;-1:-1:-1;;;1532:87:0;;;;;;;;;;;1666;;;;;;;1701:1;1666:87;;;;;;;;;;;;-1:-1:-1;;;1666:87:0;;;;;;;;1367:441;;;;1532:87;1666;1367:441;:::i;:::-;;;;;;;;1814:494;;;:::i;:::-;;;;;;;;:::i;2951:605::-;;;:::i;:::-;;;;;;;;;;;:::i;2314:186::-;-1:-1:-1;;;;;;;;;;;;;;;;;2438:55:0;;;;;;;2461:1;2438:55;;;;;;;;;;;;;-1:-1:-1;;;2438:55:0;;;;;;;;;;;2314:186;;;;;;;:::i;1043:156::-;;;;;;:::i;:::-;;:::i;3562:177::-;;;;;;:::i;:::-;3715:17;3562:177;;;;;;;;:::i;849:188::-;;;;;;:::i;:::-;;:::i;:::-;;;;8093:25:1;;;8149:2;8134:18;;8127:34;;;;8066:18;849:188:0;7919:248:1;1205:156:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2506:439::-;;;:::i;594:249::-;653:14;706:1;700;685:5;679:12;;;;;;;;:::i;:::-;:23;;;;:::i;:::-;678:29;;;;:::i;:::-;670:38;;;;;;;;;;:::i;:::-;653:55;;751:6;726:110;;-1:-1:-1;;;726:110:0;;;;;;;;:::i;:::-;;;;;;;;1814:494;-1:-1:-1;;;;;;;;;;;;;;;;;1907:19:0;;:::i;:::-;-1:-1:-1;;1977:87:0;;;;;;;;2012:1;1977:87;;;;;;;;;;;;;;-1:-1:-1;;;1977:87:0;;;;;;;;;;;;;;;2110:144;;;;;;;2145:1;2110:144;;;;;;;;;;;;-1:-1:-1;;;2110:144:0;;;;;;;;;;;2213:30;;;;;;;;;;2110:144;;;;;;;1977:87;1814:494::o;2951:605::-;-1:-1:-1;;;;;;;;;;;;;;;;;3090:19:0;;:::i;:::-;-1:-1:-1;;3226:55:0;;;;;;;;3249:1;3226:55;;;;;;;;;;;;;;-1:-1:-1;;;3226:55:0;;;;;;;;;;;;;;;3326:144;;3141:19;3326:144;;;;3361:1;3326:144;;;;;;;;;;;;-1:-1:-1;;;3326:144:0;;;;;;;;;;;3429:30;;;;;;;;;;3326:144;;;;3481:68;;;;;;;;;;;-1:-1:-1;;;3481:68:0;;;;;;;3226:55;;3123:4;2951:605;;;;;:::o;1043:156::-;-1:-1:-1;;;;;;;;;;;;;;;;;1173:19:0;1180:12;1173:19;:::i;:::-;;1043:156;-1:-1:-1;;1043:156:0:o;849:188::-;927:10;939;966;971:4;966:10;;;;10491:25:1;;10479:2;10464:18;;10345:177;966:10:0;;;;;;;;991;;10491:25:1;;;991:10:0;;10479:2:1;10464:18;991:10:0;;;;;;;-1:-1:-1;1019:4:0;;849:188;-1:-1:-1;849:188:0:o;1205:156::-;1304:19;;:::i;:::-;1335;1342:12;1335:19;:::i;2506:439::-;-1:-1:-1;;;;;;;;;;;;;;;;;2642:32:0;;:::i;:::-;2714:55;;;;;;;;2737:1;2714:55;;;;;;;;;;;;;;;;;-1:-1:-1;;;2714:55:0;;;;;;2699:70;;2794:144;;;;;;;;2829:1;2794:144;;;;;;;;;;;;;;;;;-1:-1:-1;;;2794:144:0;;;;;;;2897:30;;;;;;;;2920:4;2897:30;;;;;2794:144;;;2779:159;;2506:439;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:266:1:-;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;191:9;178:23;230:1;223:5;220:12;210:40;;246:1;243;236:12;210:40;269:5;14:266;-1:-1:-1;;;14:266:1:o;285:423::-;327:3;365:5;359:12;392:6;387:3;380:19;417:1;427:162;441:6;438:1;435:13;427:162;;;503:4;559:13;;;555:22;;549:29;531:11;;;527:20;;520:59;456:12;427:162;;;431:3;634:1;627:4;618:6;613:3;609:16;605:27;598:38;697:4;690:2;686:7;681:2;673:6;669:15;665:29;660:3;656:39;652:50;645:57;;;285:423;;;;:::o;713:256::-;804:5;798:12;793:3;786:25;768:3;857:4;850:5;846:16;840:23;895:4;888;883:3;879:14;872:28;916:47;957:4;952:3;948:14;934:12;916:47;:::i;:::-;909:54;713:256;-1:-1:-1;;;;713:256:1:o;974:481::-;1243:2;1232:9;1225:21;1206:4;1269:58;1323:2;1312:9;1308:18;1300:6;1269:58;:::i;:::-;1375:9;1367:6;1363:22;1358:2;1347:9;1343:18;1336:50;1403:46;1442:6;1434;1403:46;:::i;:::-;1395:54;974:481;-1:-1:-1;;;;;974:481:1:o;1460:360::-;1551:5;1545:12;1540:3;1533:25;1515:3;1604:4;1597:5;1593:16;1587:23;1642:4;1635;1630:3;1626:14;1619:28;1668:47;1709:4;1704:3;1700:14;1686:12;1668:47;:::i;:::-;1784:4;1773:16;;;1767:23;1761:30;1754:38;1747:46;1731:14;;;;1724:70;;;;-1:-1:-1;1656:59:1;1460:360;-1:-1:-1;1460:360:1:o;1825:481::-;2094:2;2083:9;2076:21;2057:4;2120:58;2174:2;2163:9;2159:18;2151:6;2120:58;:::i;:::-;2226:9;2218:6;2214:22;2209:2;2198:9;2194:18;2187:50;2254:46;2293:6;2285;2254:46;:::i;2311:799::-;2678:3;2667:9;2660:22;2641:4;2705:59;2759:3;2748:9;2744:19;2736:6;2705:59;:::i;:::-;2812:9;2804:6;2800:22;2795:2;2784:9;2780:18;2773:50;2846:46;2885:6;2877;2846:46;:::i;:::-;2832:60;;2928:6;2923:2;2912:9;2908:18;2901:34;2983:9;2975:6;2971:22;2966:2;2955:9;2951:18;2944:50;3011:33;3037:6;3029;3011:33;:::i;:::-;3003:41;;;3095:6;3088:14;3081:22;3075:3;3064:9;3060:19;3053:51;2311:799;;;;;;;;:::o;3115:269::-;3300:2;3289:9;3282:21;3263:4;3320:58;3374:2;3363:9;3359:18;3351:6;3320:58;:::i;3389:389::-;3478:6;3531:2;3519:9;3510:7;3506:23;3502:32;3499:52;;;3547:1;3544;3537:12;3499:52;3587:9;3574:23;3620:18;3612:6;3609:30;3606:50;;;3652:1;3649;3642:12;3606:50;3675:22;;3731:2;3713:16;;;3709:25;3706:45;;;3747:1;3744;3737:12;3783:127;3844:10;3839:3;3835:20;3832:1;3825:31;3875:4;3872:1;3865:15;3899:4;3896:1;3889:15;3915:251;3987:2;3981:9;4029:2;4017:15;;4062:18;4047:34;;4083:22;;;4044:62;4041:88;;;4109:18;;:::i;:::-;4145:2;4138:22;3915:251;:::o;4171:275::-;4242:2;4236:9;4307:2;4288:13;;-1:-1:-1;;4284:27:1;4272:40;;4342:18;4327:34;;4363:22;;;4324:62;4321:88;;;4389:18;;:::i;:::-;4425:2;4418:22;4171:275;;-1:-1:-1;4171:275:1:o;4451:531::-;4494:5;4547:3;4540:4;4532:6;4528:17;4524:27;4514:55;;4565:1;4562;4555:12;4514:55;4601:6;4588:20;4627:18;4623:2;4620:26;4617:52;;;4649:18;;:::i;:::-;4693:55;4736:2;4717:13;;-1:-1:-1;;4713:27:1;4742:4;4709:38;4693:55;:::i;:::-;4773:2;4764:7;4757:19;4819:3;4812:4;4807:2;4799:6;4795:15;4791:26;4788:35;4785:55;;;4836:1;4833;4826:12;4785:55;4901:2;4894:4;4886:6;4882:17;4875:4;4866:7;4862:18;4849:55;4949:1;4924:16;;;4942:4;4920:27;4913:38;;;;4928:7;4451:531;-1:-1:-1;;;4451:531:1:o;4987:614::-;5046:5;5094:4;5082:9;5077:3;5073:19;5069:30;5066:50;;;5112:1;5109;5102:12;5066:50;5145:4;5139:11;5189:4;5181:6;5177:17;5213:18;5281:6;5269:10;5266:22;5261:2;5249:10;5246:18;5243:46;5240:72;;;5292:18;;:::i;:::-;5334:10;5328:4;5321:24;5363:6;5354:15;;5406:9;5393:23;5385:6;5378:39;5468:2;5457:9;5453:18;5440:32;5426:46;;5495:2;5487:6;5484:14;5481:34;;;5511:1;5508;5501:12;5481:34;;5548:46;5590:3;5581:6;5570:9;5566:22;5548:46;:::i;:::-;5543:2;5535:6;5531:15;5524:71;;;4987:614;;;;:::o;5606:1198::-;5718:6;5749:2;5792;5780:9;5771:7;5767:23;5763:32;5760:52;;;5808:1;5805;5798:12;5760:52;5848:9;5835:23;5877:18;5918:2;5910:6;5907:14;5904:34;;;5934:1;5931;5924:12;5904:34;5972:6;5961:9;5957:22;5947:32;;6017:7;6010:4;6006:2;6002:13;5998:27;5988:55;;6039:1;6036;6029:12;5988:55;6075:2;6062:16;6097:2;6093;6090:10;6087:36;;;6103:18;;:::i;:::-;6149:2;6146:1;6142:10;6172:28;6196:2;6192;6188:11;6172:28;:::i;:::-;6234:15;;;6304:11;;;6300:20;;;6265:12;;;;6332:19;;;6329:39;;;6364:1;6361;6354:12;6329:39;6396:2;6392;6388:11;6377:22;;6408:366;6424:6;6419:3;6416:15;6408:366;;;6510:3;6497:17;6546:2;6533:11;6530:19;6527:109;;;6590:1;6619:2;6615;6608:14;6527:109;6661:70;6723:7;6718:2;6704:11;6700:2;6696:20;6692:29;6661:70;:::i;:::-;6649:83;;-1:-1:-1;6441:12:1;;;;6752;;;;6408:366;;;6793:5;5606:1198;-1:-1:-1;;;;;;;;;5606:1198:1:o;6809:852::-;7007:4;7036:2;7076;7065:9;7061:18;7106:2;7095:9;7088:21;7129:6;7164;7158:13;7195:6;7187;7180:22;7233:2;7222:9;7218:18;7211:25;;7295:2;7285:6;7282:1;7278:14;7267:9;7263:30;7259:39;7245:53;;7333:2;7325:6;7321:15;7354:1;7364:268;7378:6;7375:1;7372:13;7364:268;;;7471:2;7467:7;7455:9;7447:6;7443:22;7439:36;7434:3;7427:49;7499:53;7545:6;7536;7530:13;7499:53;:::i;:::-;7489:63;-1:-1:-1;7610:12:1;;;;7575:15;;;;7400:1;7393:9;7364:268;;;-1:-1:-1;7649:6:1;;6809:852;-1:-1:-1;;;;;;;6809:852:1:o;7666:248::-;7734:6;7742;7795:2;7783:9;7774:7;7770:23;7766:32;7763:52;;;7811:1;7808;7801:12;7763:52;-1:-1:-1;;7834:23:1;;;7904:2;7889:18;;;7876:32;;-1:-1:-1;7666:248:1:o;8172:389::-;8261:6;8314:2;8302:9;8293:7;8289:23;8285:32;8282:52;;;8330:1;8327;8320:12;8282:52;8370:9;8357:23;8403:18;8395:6;8392:30;8389:50;;;8435:1;8432;8425:12;8389:50;8458:22;;8514:2;8496:16;;;8492:25;8489:45;;;8530:1;8527;8520:12;8566:269;8751:2;8740:9;8733:21;8714:4;8771:58;8825:2;8814:9;8810:18;8802:6;8771:58;:::i;8840:127::-;8901:10;8896:3;8892:20;8889:1;8882:31;8932:4;8929:1;8922:15;8956:4;8953:1;8946:15;8972:245;9060:4;9039:12;;;9053;;;9035:31;;9078:13;;9075:136;;;9133:10;9128:3;9124:20;9121:1;9114:31;9168:4;9165:1;9158:15;9196:4;9193:1;9186:15;9222:254;9252:1;9286:4;9283:1;9279:12;9310:3;9300:134;;9356:10;9351:3;9347:20;9344:1;9337:31;9391:4;9388:1;9381:15;9419:4;9416:1;9409:15;9300:134;9466:3;9459:4;9456:1;9452:12;9448:22;9443:27;;;9222:254;;;;:::o;9481:650::-;9682:4;9722:1;9714:6;9711:13;9701:144;;9767:10;9762:3;9758:20;9755:1;9748:31;9802:4;9799:1;9792:15;9830:4;9827:1;9820:15;9701:144;-1:-1:-1;9854:25:1;;;9915:2;9910;9895:18;;9888:30;;;9954:2;9934:18;;;9927:30;9993:34;9988:2;9973:18;;9966:62;-1:-1:-1;;;10059:3:1;10044:19;;10037:52;10121:3;10106:19;;9481:650::o;10136:204::-;10244:9;10281:53;10319:14;10312:5;10281:53;:::i;10527:993::-;10635:9;10689:5;10673:14;10669:26;10715:4;10711:2;10707:13;10704:33;;;10733:1;10730;10723:12;10704:33;10766:2;10760:9;10808:4;10800:6;10796:17;10832:18;10900:6;10888:10;10885:22;10880:2;10868:10;10865:18;10862:46;10859:72;;;10911:18;;:::i;:::-;10951:10;10947:2;10940:22;10999:5;10986:19;10978:6;10971:35;11053:2;11046:5;11042:14;11029:28;11015:42;;11080:2;11072:6;11069:14;11066:34;;;11096:1;11093;11086:12;11066:34;;11133:53;11171:14;11162:6;11155:5;11151:18;11133:53;:::i;:::-;11128:2;11120:6;11116:15;11109:78;;11221:2;11215;11211:7;11207:2;11203:16;11199:25;11196:45;;;11237:1;11234;11227:12;11196:45;11265:22;;:::i;:::-;11250:37;;11335:2;11328:5;11324:14;11311:28;11384:7;11377:15;11370:23;11361:7;11358:36;11348:64;;11408:1;11405;11398:12;11348:64;11421:24;;11473:2;11461:15;;11454:32;;;;11465:6;10527:993;-1:-1:-1;;10527:993:1:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "flipFlop(uint256,uint256)": "cf71512c",
    "guessALetter(uint8)": "26da1c9e",
    "mixStructsAndPrimitives()": "73b10c0f",
    "namedSingleStruct()": "811d9aa3",
    "namedTwoMixedStructs()": "e0f7c604",
    "singleNestedStruct((uint256,string,(bool)))": "d3326446",
    "singleSimpleStruct((uint256,string))": "86a5a4c3",
    "twoMixedStructs()": "53fd1043",
    "twoSimpleStructs()": "40e27b10",
    "vecOfStruct((uint256,string)[])": "c8e3a3df"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum Example.Letters\",\"name\":\"answer\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"}],\"name\":\"WrongChoice\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flip\",\"type\":\"uint256\"}],\"name\":\"Flip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flop\",\"type\":\"uint256\"}],\"name\":\"Flop\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flop\",\"type\":\"uint256\"}],\"name\":\"flipFlop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_flop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_flip\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Example.Letters\",\"name\":\"guess\",\"type\":\"uint8\"}],\"name\":\"guessALetter\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mixStructsAndPrimitives\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"simpleStruct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"YesOrNo\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"namedSingleStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"struct1\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"namedTwoMixedStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"simpleStruct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"nestedStruct\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"nestedStruct\",\"type\":\"tuple\"}],\"name\":\"singleNestedStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"simpleStruct\",\"type\":\"tuple\"}],\"name\":\"singleSimpleStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twoMixedStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twoSimpleStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct[]\",\"name\":\"inVecSimpleStruct\",\"type\":\"tuple[]\"}],\"name\":\"vecOfStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct[]\",\"name\":\"vecSimpleStruct\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example/contracts/Example.sol\":\"Example\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"example/contracts/Example.sol\":{\"keccak256\":\"0x19a87c9c3125f7cf1fb487de2ecfaefb32069917da723fa1416dc4090d742b12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e2bbf44917552f0acb807e46364cd1286e86a95028071146485ebccf712de4\",\"dweb:/ipfs/QmRdDJMfrUS2gbTACczrz8DEVoCVm3gMDv7E3cwofKT4a7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "enum Example.Letters",
              "name": "answer",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "errorMessage",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "WrongChoice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flip",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Flip",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flop",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Flop",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flip",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "flop",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flipFlop",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_flop",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_flip",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum Example.Letters",
              "name": "guess",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "guessALetter"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "mixStructsAndPrimitives",
          "outputs": [
            {
              "internalType": "struct Example.SimpleStruct",
              "name": "simpleStruct",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "struct Example.NestedStruct",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "YesOrNo",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "namedSingleStruct",
          "outputs": [
            {
              "internalType": "struct Example.SimpleStruct",
              "name": "struct1",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "namedTwoMixedStructs",
          "outputs": [
            {
              "internalType": "struct Example.SimpleStruct",
              "name": "simpleStruct",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "struct Example.NestedStruct",
              "name": "nestedStruct",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Example.NestedStruct",
              "name": "nestedStruct",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "singleNestedStruct",
          "outputs": [
            {
              "internalType": "struct Example.NestedStruct",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Example.SimpleStruct",
              "name": "simpleStruct",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "singleSimpleStruct",
          "outputs": [
            {
              "internalType": "struct Example.SimpleStruct",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "twoMixedStructs",
          "outputs": [
            {
              "internalType": "struct Example.SimpleStruct",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "struct Example.NestedStruct",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "twoSimpleStructs",
          "outputs": [
            {
              "internalType": "struct Example.SimpleStruct",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "struct Example.SimpleStruct",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Example.SimpleStruct[]",
              "name": "inVecSimpleStruct",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "vecOfStruct",
          "outputs": [
            {
              "internalType": "struct Example.SimpleStruct[]",
              "name": "vecSimpleStruct",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "example/contracts/Example.sol": "Example"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "example/contracts/Example.sol": {
        "keccak256": "0x19a87c9c3125f7cf1fb487de2ecfaefb32069917da723fa1416dc4090d742b12",
        "urls": [
          "bzz-raw://23e2bbf44917552f0acb807e46364cd1286e86a95028071146485ebccf712de4",
          "dweb:/ipfs/QmRdDJMfrUS2gbTACczrz8DEVoCVm3gMDv7E3cwofKT4a7"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 0
}