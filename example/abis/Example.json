{
  "contracts": {
    "example/contracts/Example.sol:Example": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "enum Example.Letters",
              "name": "answer",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "errorMessage",
              "type": "string"
            }
          ],
          "name": "WrongChoice",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "flip",
              "type": "uint256"
            }
          ],
          "name": "Flip",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "flop",
              "type": "uint256"
            }
          ],
          "name": "Flop",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flip",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "flop",
              "type": "uint256"
            }
          ],
          "name": "flipFlop",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_flop",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_flip",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "enum Example.Letters",
              "name": "guess",
              "type": "uint8"
            }
          ],
          "name": "guessALetter",
          "outputs": [],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "mixStructsAndPrimitives",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ],
              "internalType": "struct Example.SimpleStruct",
              "name": "simpleStruct",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Example.NestedStruct",
              "name": "",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "YesOrNo",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "namedSingleStruct",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ],
              "internalType": "struct Example.SimpleStruct",
              "name": "struct1",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "namedTwoMixedStructs",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ],
              "internalType": "struct Example.SimpleStruct",
              "name": "simpleStruct",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Example.NestedStruct",
              "name": "nestedStruct",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Example.NestedStruct",
              "name": "nestedStruct",
              "type": "tuple"
            }
          ],
          "name": "singleNestedStruct",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Example.NestedStruct",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ],
              "internalType": "struct Example.SimpleStruct",
              "name": "simpleStruct",
              "type": "tuple"
            }
          ],
          "name": "singleSimpleStruct",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ],
              "internalType": "struct Example.SimpleStruct",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "twoMixedStructs",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ],
              "internalType": "struct Example.SimpleStruct",
              "name": "",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "boolVal",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Example.InnerStruct",
                  "name": "innerStruct",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Example.NestedStruct",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "twoSimpleStructs",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ],
              "internalType": "struct Example.SimpleStruct",
              "name": "",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "intVal",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "strVal",
                  "type": "string"
                }
              ],
              "internalType": "struct Example.SimpleStruct",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bin": "",
      "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum Example.Letters\",\"name\":\"answer\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"}],\"name\":\"WrongChoice\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flip\",\"type\":\"uint256\"}],\"name\":\"Flip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flop\",\"type\":\"uint256\"}],\"name\":\"Flop\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flop\",\"type\":\"uint256\"}],\"name\":\"flipFlop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_flop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_flip\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Example.Letters\",\"name\":\"guess\",\"type\":\"uint8\"}],\"name\":\"guessALetter\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mixStructsAndPrimitives\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"simpleStruct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"YesOrNo\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"namedSingleStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"struct1\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"namedTwoMixedStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"simpleStruct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"nestedStruct\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"nestedStruct\",\"type\":\"tuple\"}],\"name\":\"singleNestedStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"simpleStruct\",\"type\":\"tuple\"}],\"name\":\"singleSimpleStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twoMixedStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"boolVal\",\"type\":\"bool\"}],\"internalType\":\"struct Example.InnerStruct\",\"name\":\"innerStruct\",\"type\":\"tuple\"}],\"internalType\":\"struct Example.NestedStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twoSimpleStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"intVal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strVal\",\"type\":\"string\"}],\"internalType\":\"struct Example.SimpleStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"example/contracts/Example.sol\":\"Example\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"example/contracts/Example.sol\":{\"keccak256\":\"0x338978c673dd29904bd9ef3f9b4761decbd39e25821da47c26b2175095cf0166\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287018c5c351a74e55aead22b72943600338ea5410291c47c5a90f92abe24aef\",\"dweb:/ipfs/QmPfDBywaAoczvbS8p6gqjoZ29oBY44uffgSoQdTBvDX4u\"]}},\"version\":1}"
    }
  },
  "version": "0.8.23+commit.f704f362.Darwin.appleclang"
}